@using WebApplication1.Models
@model List<HabitacionesViewModel>
@{
    ViewBag.Title = "Habitaciones";
}

<h2>@ViewBag.Title</h2>
<hr />


@if (Model.Count > 0)
{
    <div class="container mt-3">
        <a href="~/Habitacion/newHabitaciones" class="btn btn-primary"><i class="fa-solid fa-plus"></i> Nueva Habitacion</a>
        <br />
        <br />
        <table class="table table-dark table-hover">
            <thead>
                <tr>
                    <th>No.Habitacion</th>
                    <th>Clinica</th>
                    <th>Cantidad Maxima de Personas</th>
                    <th>Gestion</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {

                    <tr>
                        <td>@item.NoHabitacion</td>
                        <td>@item.Clinica</td>
                        <td>@item.CantidadMaxPacientes</td>

                        <td>
                            <input onclick="document.location.href='@Url.Content("~/Habitacion/modificarHabitacion/" + item.IdHabitacion)'" type="button" value="Editar" class="btn btn-warning" />
                            <input onclick="eliminarHabitacion('@item.IdHabitacion','@item.NoHabitacion','@item.Clinica');" type="button" value="Eliminar" class="btn btn-danger" />
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="container mt-3">
        <h2>No hay examen</h2>
    </div>
}
@section scripts{
    <script>

            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            function eliminarHabitacion(id, Habitacion,Clinica) {

             swalWithBootstrapButtons.fire({
                 title: `Desea Eliminar La Habitacion  ${Habitacion} de La Clinica ${Clinica}?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Si',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.isConfirmed) {
                    var url = "@Url.Content("~/Habitacion/eliminarHabitacion/")" + id;
                    $.get(url).done((data) => {
                        if (data == "Exito") {
                            document.location.href = "@Url.Content("~/Habitacion/Index")";
                        } else {
                            swalWithBootstrapButtons.fire(
                                'Cancelada',
                                'La Habitacion NO Se Elimino :D',
                                'error'
                            )
                        }
                    });
                    swalWithBootstrapButtons.fire(
                        'Eliminada!',
                        'La Habitacion Se Ha Eliminado Exitosamente.',
                        'success'
                    )
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    swalWithBootstrapButtons.fire(
                        'Cancelada',
                        'La Habitacion NO Se Elimino :D',
                        'error'
                    )
                }
            })

    }
    </script>
}


