@using WebApplication1.Models
@model List<PacientesHabitacionesViewModel>
@{
    ViewBag.Title = "Pacientes Habitaciones";
}

<h2>@ViewBag.Title</h2>
<hr />


@if (Model.Count > 0)
{
    <div class="container mt-3">
        <a href="~/PacienteHabitacion/newPacienteHab" class="btn btn-primary"><i class="fa-solid fa-plus"></i> Nuevo Paciente Habitacion</a>
        <br />
        <br />
        <table class="table table-dark table-hover">
            <thead>
                <tr>
                    <th>Paciente</th>
                    <th>Clinica</th>
                    <th>Numero de Habitacion</th>
                    <th>Gestion</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Paciente</td>
                        <td>@item.Clinica</td>
                        <td>@item.NumHabitacion</td>
                        <td>
                            <input onclick="document.location.href='@Url.Content("~/PacienteHabitacion/modificarPacienteHabitacion/" + item.IdPacHab)'" type="button" value="Editar" class="btn btn-warning" />
                            <input onclick="EliminarPacienteHabitacion('@item.IdPacHab', '@item.Paciente', '@item.NumHabitacion');" type="button" value="Eliminar" class="btn btn-danger" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="container mt-3">
        <h2>No hay usuarios</h2>
    </div>
}
@section scripts{
    <script>
    const swalWithBootstrapButtons = Swal.mixin({
        customClass: {
            confirmButton: 'btn btn-success',
            cancelButton: 'btn btn-danger'
        },
        buttonsStyling: false
    })

        function EliminarPacienteHabitacion(id, Paciente, NoHabitacion) {
                    swalWithBootstrapButtons.fire({
                        title: `Desea Eliminar al Paciente ${Paciente} de la Habitacion ${NoHabitacion}?`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Si',
                        cancelButtonText: 'No'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            var url = "@Url.Content("~/PacienteHabitacion/EliminarPacienteHabitacion/")" + id;
                            $.get(url).done((data) => {
                                if (data == "Exito") {
                                    document.location.href = "@Url.Content("~/PacienteHabitacion/Index")";
                                } else {
                                    swalWithBootstrapButtons.fire(
                                        'Cancelado',
                                        'El Paciente NO Se Elimino :D',
                                        'error'
                                    )
                                }
                            });
                            swalWithBootstrapButtons.fire(
                                'Eliminado!',
                                'El Paciente Se Ha Eliminado Exitosamente.',
                                'success'
                            )
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            swalWithBootstrapButtons.fire(
                                'Cancelado',
                                'El Paciente NO Se Elimino :D',
                                'error'
                            )
                        }
                    })

    }
    </script>
}
